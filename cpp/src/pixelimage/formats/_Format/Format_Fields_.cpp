// Generated by Haxe 4.3.0-rc.1+
#include <hxcpp.h>

#ifndef INCLUDED_Sys
#include <Sys.h>
#endif
#ifndef INCLUDED_haxe_io_Path
#include <haxe/io/Path.h>
#endif
#ifndef INCLUDED_pixelimage_formats__Format_Format_Fields_
#include <pixelimage/formats/_Format/Format_Fields_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_1842d5bd65ddcded_94_get_dir,"pixelimage.formats._Format.Format_Fields_","get_dir",0xc7e12477,"pixelimage.formats._Format.Format_Fields_.get_dir","pixelimage/formats/Format.hx",94,0x6838755a)
namespace pixelimage{
namespace formats{
namespace _Format{

void Format_Fields__obj::__construct() { }

Dynamic Format_Fields__obj::__CreateEmpty() { return new Format_Fields__obj; }

void *Format_Fields__obj::_hx_vtable = 0;

Dynamic Format_Fields__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Format_Fields__obj > _hx_result = new Format_Fields__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Format_Fields__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0da52f6d;
}

::String Format_Fields__obj::get_dir(){
            	HX_STACKFRAME(&_hx_pos_1842d5bd65ddcded_94_get_dir)
HXLINE(  98)		::String dir = ::haxe::io::Path_obj::directory(::Sys_obj::executablePath());
HXLINE( 100)		return dir;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Format_Fields__obj,get_dir,return )


Format_Fields__obj::Format_Fields__obj()
{
}

bool Format_Fields__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"get_dir") ) { outValue = get_dir_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Format_Fields__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *Format_Fields__obj_sStaticStorageInfo = 0;
#endif

::hx::Class Format_Fields__obj::__mClass;

static ::String Format_Fields__obj_sStaticFields[] = {
	HX_("get_dir",e4,05,c1,26),
	::String(null())
};

void Format_Fields__obj::__register()
{
	Format_Fields__obj _hx_dummy;
	Format_Fields__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("pixelimage.formats._Format.Format_Fields_",01,34,ca,a3);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Format_Fields__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Format_Fields__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Format_Fields__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Format_Fields__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Format_Fields__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace pixelimage
} // end namespace formats
} // end namespace _Format
