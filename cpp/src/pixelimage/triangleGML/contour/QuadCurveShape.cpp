// Generated by Haxe 4.3.0-rc.1+
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_justPath_ILinePathContext
#include <justPath/ILinePathContext.h>
#endif
#ifndef INCLUDED_pixelimage_ImageStruct
#include <pixelimage/ImageStruct.h>
#endif
#ifndef INCLUDED_pixelimage_draw_DrawShapeHelper
#include <pixelimage/draw/DrawShapeHelper.h>
#endif
#ifndef INCLUDED_pixelimage_triangleGML_contour_QuadCurveShape
#include <pixelimage/triangleGML/contour/QuadCurveShape.h>
#endif
#ifndef INCLUDED_pixelimage_triangleGML_coreShape_BasicShape
#include <pixelimage/triangleGML/coreShape/BasicShape.h>
#endif
#ifndef INCLUDED_pixelimage_triangleGML_coreShape_FillShape
#include <pixelimage/triangleGML/coreShape/FillShape.h>
#endif
#ifndef INCLUDED_pixelimage_triangleGML_coreShape_GroupShape
#include <pixelimage/triangleGML/coreShape/GroupShape.h>
#endif
#ifndef INCLUDED_pixelimage_triangleGML_coreShape_ShapeInterface
#include <pixelimage/triangleGML/coreShape/ShapeInterface.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_16bf92fe29997d60_31_new,"pixelimage.triangleGML.contour.QuadCurveShape","new",0x23339848,"pixelimage.triangleGML.contour.QuadCurveShape.new","pixelimage/triangleGML/contour/QuadCurveShape.hx",31,0xbd059545)
HX_LOCAL_STACK_FRAME(_hx_pos_16bf92fe29997d60_42_setParameter,"pixelimage.triangleGML.contour.QuadCurveShape","setParameter",0x9cebf0bf,"pixelimage.triangleGML.contour.QuadCurveShape.setParameter","pixelimage/triangleGML/contour/QuadCurveShape.hx",42,0xbd059545)
HX_LOCAL_STACK_FRAME(_hx_pos_16bf92fe29997d60_61_render,"pixelimage.triangleGML.contour.QuadCurveShape","render",0xda79846e,"pixelimage.triangleGML.contour.QuadCurveShape.render","pixelimage/triangleGML/contour/QuadCurveShape.hx",61,0xbd059545)
namespace pixelimage{
namespace triangleGML{
namespace contour{

void QuadCurveShape_obj::__construct(::hx::Null< Float >  __o_opacity,::hx::Null< bool >  __o_visibility,::hx::Null< int >  __o_strokeColor,::hx::Null< Float >  __o_strokeWidth,::Array< ::String > strokeDashGapArray,::hx::Null< int >  __o_fill,::hx::Null< bool >  __o_thru,::hx::Null< Float >  __o_x1,::hx::Null< Float >  __o_y1,::hx::Null< Float >  __o_x2,::hx::Null< Float >  __o_y2,::hx::Null< Float >  __o_x3,::hx::Null< Float >  __o_y3){
            		Float opacity = __o_opacity.Default(((Float)1.));
            		bool visibility = __o_visibility.Default(true);
            		int strokeColor = __o_strokeColor.Default(0);
            		Float strokeWidth = __o_strokeWidth.Default(((Float)1.));
            		int fill = __o_fill.Default(0);
            		bool thru = __o_thru.Default(false);
            		Float x1 = __o_x1.Default(((Float)0.));
            		Float y1 = __o_y1.Default(((Float)0.));
            		Float x2 = __o_x2.Default(((Float)0.));
            		Float y2 = __o_y2.Default(((Float)0.));
            		Float x3 = __o_x3.Default(((Float)0.));
            		Float y3 = __o_y3.Default(((Float)0.));
            	HX_STACKFRAME(&_hx_pos_16bf92fe29997d60_31_new)
HXLINE(  32)		super::__construct(opacity,visibility,strokeColor,strokeWidth,strokeDashGapArray,fill);
HXLINE(  33)		this->thru = thru;
HXLINE(  34)		this->x1 = x1;
HXLINE(  35)		this->y1 = y1;
HXLINE(  36)		this->x2 = x2;
HXLINE(  37)		this->y2 = y2;
HXLINE(  38)		this->x3 = x3;
HXLINE(  39)		this->y3 = y3;
            	}

Dynamic QuadCurveShape_obj::__CreateEmpty() { return new QuadCurveShape_obj; }

void *QuadCurveShape_obj::_hx_vtable = 0;

Dynamic QuadCurveShape_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< QuadCurveShape_obj > _hx_result = new QuadCurveShape_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3],inArgs[4],inArgs[5],inArgs[6],inArgs[7],inArgs[8],inArgs[9],inArgs[10],inArgs[11],inArgs[12]);
	return _hx_result;
}

bool QuadCurveShape_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x24e92cfb) {
		if (inClassId<=(int)0x2091632c) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x2091632c;
		} else {
			return inClassId==(int)0x24e92cfb;
		}
	} else {
		return inClassId==(int)0x389f4e25 || inClassId==(int)0x700c1a8a;
	}
}

void QuadCurveShape_obj::setParameter(::String name,::String value){
            	HX_STACKFRAME(&_hx_pos_16bf92fe29997d60_42_setParameter)
HXDLIN(  42)		::String _hx_switch_0 = name;
            		if (  (_hx_switch_0==HX_("thru",37,0e,fc,4c)) ){
HXLINE(  44)			bool _hx_tmp;
HXDLIN(  44)			if ((value.toLowerCase() == HX_("true",4e,a7,03,4d))) {
HXLINE(  44)				_hx_tmp = true;
            			}
            			else {
HXLINE(  44)				_hx_tmp = false;
            			}
HXDLIN(  44)			this->thru = _hx_tmp;
HXDLIN(  44)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("x1",b9,68,00,00)) ){
HXLINE(  46)			this->x1 = ::Std_obj::parseFloat(value);
HXDLIN(  46)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("x2",ba,68,00,00)) ){
HXLINE(  50)			this->x2 = ::Std_obj::parseFloat(value);
HXDLIN(  50)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("x3",bb,68,00,00)) ){
HXLINE(  54)			this->x3 = ::Std_obj::parseFloat(value);
HXDLIN(  54)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("y1",98,69,00,00)) ){
HXLINE(  48)			this->y1 = ::Std_obj::parseFloat(value);
HXDLIN(  48)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("y2",99,69,00,00)) ){
HXLINE(  52)			this->y2 = ::Std_obj::parseFloat(value);
HXDLIN(  52)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("y3",9a,69,00,00)) ){
HXLINE(  56)			this->y3 = ::Std_obj::parseFloat(value);
HXDLIN(  56)			goto _hx_goto_1;
            		}
            		/* default */{
HXLINE(  58)			this->super::setParameter(name,value);
            		}
            		_hx_goto_1:;
            	}


::pixelimage::ImageStruct QuadCurveShape_obj::render(::pixelimage::ImageStruct pixelShape){
            	HX_GC_STACKFRAME(&_hx_pos_16bf92fe29997d60_61_render)
HXLINE(  62)		::pixelimage::draw::DrawShapeHelper drawing = ::pixelimage::draw::DrawShapeHelper_obj::__alloc( HX_CTX ,pixelShape,this->strokeWidth,this->strokeColor,null(),null(),null(),null());
HXLINE(  63)		drawing->moveTo(this->x1,this->y1);
HXLINE(  64)		drawing->quadTo(this->x2,this->y2,this->x3,this->y3);
HXLINE(  65)		return this->super::render(pixelShape);
            	}



::hx::ObjectPtr< QuadCurveShape_obj > QuadCurveShape_obj::__new(::hx::Null< Float >  __o_opacity,::hx::Null< bool >  __o_visibility,::hx::Null< int >  __o_strokeColor,::hx::Null< Float >  __o_strokeWidth,::Array< ::String > strokeDashGapArray,::hx::Null< int >  __o_fill,::hx::Null< bool >  __o_thru,::hx::Null< Float >  __o_x1,::hx::Null< Float >  __o_y1,::hx::Null< Float >  __o_x2,::hx::Null< Float >  __o_y2,::hx::Null< Float >  __o_x3,::hx::Null< Float >  __o_y3) {
	::hx::ObjectPtr< QuadCurveShape_obj > __this = new QuadCurveShape_obj();
	__this->__construct(__o_opacity,__o_visibility,__o_strokeColor,__o_strokeWidth,strokeDashGapArray,__o_fill,__o_thru,__o_x1,__o_y1,__o_x2,__o_y2,__o_x3,__o_y3);
	return __this;
}

::hx::ObjectPtr< QuadCurveShape_obj > QuadCurveShape_obj::__alloc(::hx::Ctx *_hx_ctx,::hx::Null< Float >  __o_opacity,::hx::Null< bool >  __o_visibility,::hx::Null< int >  __o_strokeColor,::hx::Null< Float >  __o_strokeWidth,::Array< ::String > strokeDashGapArray,::hx::Null< int >  __o_fill,::hx::Null< bool >  __o_thru,::hx::Null< Float >  __o_x1,::hx::Null< Float >  __o_y1,::hx::Null< Float >  __o_x2,::hx::Null< Float >  __o_y2,::hx::Null< Float >  __o_x3,::hx::Null< Float >  __o_y3) {
	QuadCurveShape_obj *__this = (QuadCurveShape_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(QuadCurveShape_obj), true, "pixelimage.triangleGML.contour.QuadCurveShape"));
	*(void **)__this = QuadCurveShape_obj::_hx_vtable;
	__this->__construct(__o_opacity,__o_visibility,__o_strokeColor,__o_strokeWidth,strokeDashGapArray,__o_fill,__o_thru,__o_x1,__o_y1,__o_x2,__o_y2,__o_x3,__o_y3);
	return __this;
}

QuadCurveShape_obj::QuadCurveShape_obj()
{
}

::hx::Val QuadCurveShape_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"x1") ) { return ::hx::Val( x1 ); }
		if (HX_FIELD_EQ(inName,"y1") ) { return ::hx::Val( y1 ); }
		if (HX_FIELD_EQ(inName,"x2") ) { return ::hx::Val( x2 ); }
		if (HX_FIELD_EQ(inName,"y2") ) { return ::hx::Val( y2 ); }
		if (HX_FIELD_EQ(inName,"x3") ) { return ::hx::Val( x3 ); }
		if (HX_FIELD_EQ(inName,"y3") ) { return ::hx::Val( y3 ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"thru") ) { return ::hx::Val( thru ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"render") ) { return ::hx::Val( render_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"setParameter") ) { return ::hx::Val( setParameter_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val QuadCurveShape_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"x1") ) { x1=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"y1") ) { y1=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"x2") ) { x2=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"y2") ) { y2=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"x3") ) { x3=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"y3") ) { y3=inValue.Cast< Float >(); return inValue; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"thru") ) { thru=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void QuadCurveShape_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("x1",b9,68,00,00));
	outFields->push(HX_("y1",98,69,00,00));
	outFields->push(HX_("x2",ba,68,00,00));
	outFields->push(HX_("y2",99,69,00,00));
	outFields->push(HX_("x3",bb,68,00,00));
	outFields->push(HX_("y3",9a,69,00,00));
	outFields->push(HX_("thru",37,0e,fc,4c));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo QuadCurveShape_obj_sMemberStorageInfo[] = {
	{::hx::fsFloat,(int)offsetof(QuadCurveShape_obj,x1),HX_("x1",b9,68,00,00)},
	{::hx::fsFloat,(int)offsetof(QuadCurveShape_obj,y1),HX_("y1",98,69,00,00)},
	{::hx::fsFloat,(int)offsetof(QuadCurveShape_obj,x2),HX_("x2",ba,68,00,00)},
	{::hx::fsFloat,(int)offsetof(QuadCurveShape_obj,y2),HX_("y2",99,69,00,00)},
	{::hx::fsFloat,(int)offsetof(QuadCurveShape_obj,x3),HX_("x3",bb,68,00,00)},
	{::hx::fsFloat,(int)offsetof(QuadCurveShape_obj,y3),HX_("y3",9a,69,00,00)},
	{::hx::fsBool,(int)offsetof(QuadCurveShape_obj,thru),HX_("thru",37,0e,fc,4c)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *QuadCurveShape_obj_sStaticStorageInfo = 0;
#endif

static ::String QuadCurveShape_obj_sMemberFields[] = {
	HX_("x1",b9,68,00,00),
	HX_("y1",98,69,00,00),
	HX_("x2",ba,68,00,00),
	HX_("y2",99,69,00,00),
	HX_("x3",bb,68,00,00),
	HX_("y3",9a,69,00,00),
	HX_("thru",37,0e,fc,4c),
	HX_("setParameter",a7,f5,ff,6c),
	HX_("render",56,6b,29,05),
	::String(null()) };

::hx::Class QuadCurveShape_obj::__mClass;

void QuadCurveShape_obj::__register()
{
	QuadCurveShape_obj _hx_dummy;
	QuadCurveShape_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("pixelimage.triangleGML.contour.QuadCurveShape",56,14,68,28);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(QuadCurveShape_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< QuadCurveShape_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = QuadCurveShape_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = QuadCurveShape_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace pixelimage
} // end namespace triangleGML
} // end namespace contour
