// Generated by Haxe 4.3.0-rc.1+
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_pixelimage_ImageStruct
#include <pixelimage/ImageStruct.h>
#endif
#ifndef INCLUDED_pixelimage_algo_IhitObj
#include <pixelimage/algo/IhitObj.h>
#endif
#ifndef INCLUDED_pixelimage_triangleGML_coreShape_GroupShape
#include <pixelimage/triangleGML/coreShape/GroupShape.h>
#endif
#ifndef INCLUDED_pixelimage_triangleGML_coreShape_ShapeInterface
#include <pixelimage/triangleGML/coreShape/ShapeInterface.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_1aada6cb3dcc14bf_25_new,"pixelimage.triangleGML.coreShape.GroupShape","new",0xe468b7e9,"pixelimage.triangleGML.coreShape.GroupShape.new","pixelimage/triangleGML/coreShape/GroupShape.hx",25,0x14cabdc4)
HX_LOCAL_STACK_FRAME(_hx_pos_1aada6cb3dcc14bf_38_setParameter,"pixelimage.triangleGML.coreShape.GroupShape","setParameter",0x807054fe,"pixelimage.triangleGML.coreShape.GroupShape.setParameter","pixelimage/triangleGML/coreShape/GroupShape.hx",38,0x14cabdc4)
HX_LOCAL_STACK_FRAME(_hx_pos_1aada6cb3dcc14bf_47_translate,"pixelimage.triangleGML.coreShape.GroupShape","translate",0x93b88b97,"pixelimage.triangleGML.coreShape.GroupShape.translate","pixelimage/triangleGML/coreShape/GroupShape.hx",47,0x14cabdc4)
HX_LOCAL_STACK_FRAME(_hx_pos_1aada6cb3dcc14bf_52_render,"pixelimage.triangleGML.coreShape.GroupShape","render",0xf06d1f6d,"pixelimage.triangleGML.coreShape.GroupShape.render","pixelimage/triangleGML/coreShape/GroupShape.hx",52,0x14cabdc4)
namespace pixelimage{
namespace triangleGML{
namespace coreShape{

void GroupShape_obj::__construct(::hx::Null< Float >  __o_opacity,::hx::Null< bool >  __o_visibility){
            		Float opacity = __o_opacity.Default(((Float)1.));
            		bool visibility = __o_visibility.Default(true);
            	HX_STACKFRAME(&_hx_pos_1aada6cb3dcc14bf_25_new)
HXLINE(  31)		this->hitObj = null();
HXLINE(  30)		this->offY = ((Float)0.);
HXLINE(  29)		this->offX = ((Float)0.);
HXLINE(  34)		this->visibility = visibility;
HXLINE(  35)		this->opacity = opacity;
            	}

bool GroupShape_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x24e92cfb;
}

static ::pixelimage::triangleGML::coreShape::ShapeInterface_obj _hx_pixelimage_triangleGML_coreShape_GroupShape__hx_pixelimage_triangleGML_coreShape_ShapeInterface= {
	( void (::hx::Object::*)(::String,::String))&::pixelimage::triangleGML::coreShape::GroupShape_obj::setParameter,
	( void (::hx::Object::*)(Float,Float))&::pixelimage::triangleGML::coreShape::GroupShape_obj::translate,
	( ::pixelimage::ImageStruct (::hx::Object::*)(::pixelimage::ImageStruct))&::pixelimage::triangleGML::coreShape::GroupShape_obj::render,
};

void *GroupShape_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0x99aa51b1: return &_hx_pixelimage_triangleGML_coreShape_GroupShape__hx_pixelimage_triangleGML_coreShape_ShapeInterface;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

void GroupShape_obj::setParameter(::String name,::String value){
            	HX_STACKFRAME(&_hx_pos_1aada6cb3dcc14bf_38_setParameter)
HXDLIN(  38)		::String _hx_switch_0 = name;
            		if (  (_hx_switch_0==HX_("opacity",cb,5d,65,eb)) ){
HXLINE(  42)			this->opacity = ::Std_obj::parseFloat(value);
HXDLIN(  42)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("visibility",d2,ad,0d,d3)) ){
HXLINE(  40)			bool _hx_tmp;
HXDLIN(  40)			if ((value.toLowerCase() == HX_("true",4e,a7,03,4d))) {
HXLINE(  40)				_hx_tmp = true;
            			}
            			else {
HXLINE(  40)				_hx_tmp = false;
            			}
HXDLIN(  40)			this->visibility = _hx_tmp;
HXDLIN(  40)			goto _hx_goto_1;
            		}
            		/* default */{
HXLINE(  44)			::haxe::Log_obj::trace((HX_("property not found ",f6,14,bb,c9) + name),::hx::SourceInfo(HX_("pixelimage/triangleGML/coreShape/GroupShape.hx",c4,bd,ca,14),44,HX_("pixelimage.triangleGML.coreShape.GroupShape",77,8f,0a,a7),HX_("setParameter",a7,f5,ff,6c)));
            		}
            		_hx_goto_1:;
            	}


HX_DEFINE_DYNAMIC_FUNC2(GroupShape_obj,setParameter,(void))

void GroupShape_obj::translate(Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_1aada6cb3dcc14bf_47_translate)
HXLINE(  48)		this->offX = x;
HXLINE(  49)		this->offY = y;
            	}


HX_DEFINE_DYNAMIC_FUNC2(GroupShape_obj,translate,(void))

::pixelimage::ImageStruct GroupShape_obj::render(::pixelimage::ImageStruct pixelShape){
            	HX_STACKFRAME(&_hx_pos_1aada6cb3dcc14bf_52_render)
HXDLIN(  52)		return pixelShape;
            	}


HX_DEFINE_DYNAMIC_FUNC1(GroupShape_obj,render,return )


GroupShape_obj::GroupShape_obj()
{
}

void GroupShape_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(GroupShape);
	HX_MARK_MEMBER_NAME(visibility,"visibility");
	HX_MARK_MEMBER_NAME(opacity,"opacity");
	HX_MARK_MEMBER_NAME(offX,"offX");
	HX_MARK_MEMBER_NAME(offY,"offY");
	HX_MARK_MEMBER_NAME(hitObj,"hitObj");
	HX_MARK_END_CLASS();
}

void GroupShape_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(visibility,"visibility");
	HX_VISIT_MEMBER_NAME(opacity,"opacity");
	HX_VISIT_MEMBER_NAME(offX,"offX");
	HX_VISIT_MEMBER_NAME(offY,"offY");
	HX_VISIT_MEMBER_NAME(hitObj,"hitObj");
}

::hx::Val GroupShape_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"offX") ) { return ::hx::Val( offX ); }
		if (HX_FIELD_EQ(inName,"offY") ) { return ::hx::Val( offY ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"hitObj") ) { return ::hx::Val( hitObj ); }
		if (HX_FIELD_EQ(inName,"render") ) { return ::hx::Val( render_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"opacity") ) { return ::hx::Val( opacity ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"translate") ) { return ::hx::Val( translate_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"visibility") ) { return ::hx::Val( visibility ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"setParameter") ) { return ::hx::Val( setParameter_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val GroupShape_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"offX") ) { offX=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"offY") ) { offY=inValue.Cast< Float >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"hitObj") ) { hitObj=inValue.Cast< ::Dynamic >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"opacity") ) { opacity=inValue.Cast< Float >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"visibility") ) { visibility=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void GroupShape_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("visibility",d2,ad,0d,d3));
	outFields->push(HX_("opacity",cb,5d,65,eb));
	outFields->push(HX_("offX",09,6e,ac,49));
	outFields->push(HX_("offY",0a,6e,ac,49));
	outFields->push(HX_("hitObj",64,77,19,57));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo GroupShape_obj_sMemberStorageInfo[] = {
	{::hx::fsBool,(int)offsetof(GroupShape_obj,visibility),HX_("visibility",d2,ad,0d,d3)},
	{::hx::fsFloat,(int)offsetof(GroupShape_obj,opacity),HX_("opacity",cb,5d,65,eb)},
	{::hx::fsFloat,(int)offsetof(GroupShape_obj,offX),HX_("offX",09,6e,ac,49)},
	{::hx::fsFloat,(int)offsetof(GroupShape_obj,offY),HX_("offY",0a,6e,ac,49)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(GroupShape_obj,hitObj),HX_("hitObj",64,77,19,57)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *GroupShape_obj_sStaticStorageInfo = 0;
#endif

static ::String GroupShape_obj_sMemberFields[] = {
	HX_("visibility",d2,ad,0d,d3),
	HX_("opacity",cb,5d,65,eb),
	HX_("offX",09,6e,ac,49),
	HX_("offY",0a,6e,ac,49),
	HX_("hitObj",64,77,19,57),
	HX_("setParameter",a7,f5,ff,6c),
	HX_("translate",4e,d7,7f,49),
	HX_("render",56,6b,29,05),
	::String(null()) };

::hx::Class GroupShape_obj::__mClass;

void GroupShape_obj::__register()
{
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("pixelimage.triangleGML.coreShape.GroupShape",77,8f,0a,a7);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(GroupShape_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< GroupShape_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = GroupShape_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = GroupShape_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace pixelimage
} // end namespace triangleGML
} // end namespace coreShape
