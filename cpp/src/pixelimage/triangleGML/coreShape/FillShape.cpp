// Generated by Haxe 4.3.0-rc.1+
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_pixelimage_triangleGML_coreShape_BasicShape
#include <pixelimage/triangleGML/coreShape/BasicShape.h>
#endif
#ifndef INCLUDED_pixelimage_triangleGML_coreShape_FillShape
#include <pixelimage/triangleGML/coreShape/FillShape.h>
#endif
#ifndef INCLUDED_pixelimage_triangleGML_coreShape_GroupShape
#include <pixelimage/triangleGML/coreShape/GroupShape.h>
#endif
#ifndef INCLUDED_pixelimage_triangleGML_coreShape_ShapeInterface
#include <pixelimage/triangleGML/coreShape/ShapeInterface.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_0e0ce4e83d20b63f_16_new,"pixelimage.triangleGML.coreShape.FillShape","new",0x034bb89b,"pixelimage.triangleGML.coreShape.FillShape.new","pixelimage/triangleGML/coreShape/FillShape.hx",16,0x746a3fb8)
HX_LOCAL_STACK_FRAME(_hx_pos_0e0ce4e83d20b63f_21_setParameter,"pixelimage.triangleGML.coreShape.FillShape","setParameter",0xa0f4ae0c,"pixelimage.triangleGML.coreShape.FillShape.setParameter","pixelimage/triangleGML/coreShape/FillShape.hx",21,0x746a3fb8)
namespace pixelimage{
namespace triangleGML{
namespace coreShape{

void FillShape_obj::__construct(::hx::Null< Float >  __o_opacity,::hx::Null< bool >  __o_visibility,::hx::Null< int >  __o_strokeColor,::hx::Null< Float >  __o_strokeWidth,::Array< ::String > strokeDashGapArray,::hx::Null< int >  __o_fill){
            		Float opacity = __o_opacity.Default(((Float)1.));
            		bool visibility = __o_visibility.Default(true);
            		int strokeColor = __o_strokeColor.Default(0);
            		Float strokeWidth = __o_strokeWidth.Default(((Float)1.));
            		int fill = __o_fill.Default(0);
            	HX_STACKFRAME(&_hx_pos_0e0ce4e83d20b63f_16_new)
HXLINE(  17)		super::__construct(opacity,visibility,strokeColor,strokeWidth,strokeDashGapArray);
HXLINE(  18)		this->fill = fill;
            	}

Dynamic FillShape_obj::__CreateEmpty() { return new FillShape_obj; }

void *FillShape_obj::_hx_vtable = 0;

Dynamic FillShape_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< FillShape_obj > _hx_result = new FillShape_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3],inArgs[4],inArgs[5]);
	return _hx_result;
}

bool FillShape_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x24e92cfb) {
		if (inClassId<=(int)0x2091632c) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x2091632c;
		} else {
			return inClassId==(int)0x24e92cfb;
		}
	} else {
		return inClassId==(int)0x389f4e25;
	}
}

void FillShape_obj::setParameter(::String name,::String value){
            	HX_STACKFRAME(&_hx_pos_0e0ce4e83d20b63f_21_setParameter)
HXDLIN(  21)		if ((name == HX_("fill",83,ce,bb,43))) {
HXLINE(  23)			this->fill = ( (int)(::Std_obj::parseInt(value)) );
            		}
            		else {
HXLINE(  25)			this->super::setParameter(name,value);
            		}
            	}



::hx::ObjectPtr< FillShape_obj > FillShape_obj::__new(::hx::Null< Float >  __o_opacity,::hx::Null< bool >  __o_visibility,::hx::Null< int >  __o_strokeColor,::hx::Null< Float >  __o_strokeWidth,::Array< ::String > strokeDashGapArray,::hx::Null< int >  __o_fill) {
	::hx::ObjectPtr< FillShape_obj > __this = new FillShape_obj();
	__this->__construct(__o_opacity,__o_visibility,__o_strokeColor,__o_strokeWidth,strokeDashGapArray,__o_fill);
	return __this;
}

::hx::ObjectPtr< FillShape_obj > FillShape_obj::__alloc(::hx::Ctx *_hx_ctx,::hx::Null< Float >  __o_opacity,::hx::Null< bool >  __o_visibility,::hx::Null< int >  __o_strokeColor,::hx::Null< Float >  __o_strokeWidth,::Array< ::String > strokeDashGapArray,::hx::Null< int >  __o_fill) {
	FillShape_obj *__this = (FillShape_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(FillShape_obj), true, "pixelimage.triangleGML.coreShape.FillShape"));
	*(void **)__this = FillShape_obj::_hx_vtable;
	__this->__construct(__o_opacity,__o_visibility,__o_strokeColor,__o_strokeWidth,strokeDashGapArray,__o_fill);
	return __this;
}

FillShape_obj::FillShape_obj()
{
}

::hx::Val FillShape_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"fill") ) { return ::hx::Val( fill ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"setParameter") ) { return ::hx::Val( setParameter_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val FillShape_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"fill") ) { fill=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void FillShape_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("fill",83,ce,bb,43));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo FillShape_obj_sMemberStorageInfo[] = {
	{::hx::fsInt,(int)offsetof(FillShape_obj,fill),HX_("fill",83,ce,bb,43)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *FillShape_obj_sStaticStorageInfo = 0;
#endif

static ::String FillShape_obj_sMemberFields[] = {
	HX_("fill",83,ce,bb,43),
	HX_("setParameter",a7,f5,ff,6c),
	::String(null()) };

::hx::Class FillShape_obj::__mClass;

void FillShape_obj::__register()
{
	FillShape_obj _hx_dummy;
	FillShape_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("pixelimage.triangleGML.coreShape.FillShape",29,cf,0e,38);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(FillShape_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< FillShape_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FillShape_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FillShape_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace pixelimage
} // end namespace triangleGML
} // end namespace coreShape
