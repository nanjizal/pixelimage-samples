// Generated by Haxe 4.3.0-rc.1+
#include <hxcpp.h>

#ifndef INCLUDED_pixelimage_samples_pixelimage_format_Grid
#include <pixelimage_samples/pixelimage_format/Grid.h>
#endif
#ifndef INCLUDED_pixelimage_samples_pixelimage_format__Grid_Grid_Fields_
#include <pixelimage_samples/pixelimage_format/_Grid/Grid_Fields_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_82fa0d80e5f9d9e4_13_main,"pixelimage_samples.pixelimage_format._Grid.Grid_Fields_","main",0xdecbc6b5,"pixelimage_samples.pixelimage_format._Grid.Grid_Fields_.main","pixelimage_samples/pixelimage_format/Grid.hx",13,0x655227fa)
namespace pixelimage_samples{
namespace pixelimage_format{
namespace _Grid{

void Grid_Fields__obj::__construct() { }

Dynamic Grid_Fields__obj::__CreateEmpty() { return new Grid_Fields__obj; }

void *Grid_Fields__obj::_hx_vtable = 0;

Dynamic Grid_Fields__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Grid_Fields__obj > _hx_result = new Grid_Fields__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Grid_Fields__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x5c002514;
}

void Grid_Fields__obj::main(){
            	HX_GC_STACKFRAME(&_hx_pos_82fa0d80e5f9d9e4_13_main)
HXDLIN(  13)		::pixelimage_samples::pixelimage_format::Grid_obj::__alloc( HX_CTX );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Grid_Fields__obj,main,(void))


Grid_Fields__obj::Grid_Fields__obj()
{
}

bool Grid_Fields__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"main") ) { outValue = main_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Grid_Fields__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *Grid_Fields__obj_sStaticStorageInfo = 0;
#endif

::hx::Class Grid_Fields__obj::__mClass;

static ::String Grid_Fields__obj_sStaticFields[] = {
	HX_("main",39,38,56,48),
	::String(null())
};

void Grid_Fields__obj::__register()
{
	Grid_Fields__obj _hx_dummy;
	Grid_Fields__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("pixelimage_samples.pixelimage_format._Grid.Grid_Fields_",72,63,c1,93);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Grid_Fields__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Grid_Fields__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Grid_Fields__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Grid_Fields__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Grid_Fields__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace pixelimage_samples
} // end namespace pixelimage_format
} // end namespace _Grid
