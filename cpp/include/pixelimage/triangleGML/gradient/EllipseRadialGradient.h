// Generated by Haxe 4.3.0-rc.1+
#ifndef INCLUDED_pixelimage_triangleGML_gradient_EllipseRadialGradient
#define INCLUDED_pixelimage_triangleGML_gradient_EllipseRadialGradient

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_pixelimage_triangleGML_coreShape_BasicGradient
#include <pixelimage/triangleGML/coreShape/BasicGradient.h>
#endif
HX_DECLARE_CLASS1(pixelimage,ImageStruct)
HX_DECLARE_CLASS3(pixelimage,triangleGML,coreShape,BasicGradient)
HX_DECLARE_CLASS3(pixelimage,triangleGML,coreShape,GroupShape)
HX_DECLARE_CLASS3(pixelimage,triangleGML,coreShape,ShapeInterface)
HX_DECLARE_CLASS3(pixelimage,triangleGML,gradient,EllipseRadialGradient)

namespace pixelimage{
namespace triangleGML{
namespace gradient{


class HXCPP_CLASS_ATTRIBUTES EllipseRadialGradient_obj : public ::pixelimage::triangleGML::coreShape::BasicGradient_obj
{
	public:
		typedef ::pixelimage::triangleGML::coreShape::BasicGradient_obj super;
		typedef EllipseRadialGradient_obj OBJ_;
		EllipseRadialGradient_obj();

	public:
		enum { _hx_ClassId = 0x682b5a9c };

		void __construct(::hx::Null< Float >  __o_opacity,::hx::Null< bool >  __o_visibility,::hx::Null< int >  __o_centreX,::hx::Null< int >  __o_centreY,::hx::Null< int >  __o_radiusX,::hx::Null< int >  __o_radiusY,::hx::Null< int >  __o_colorIn,::hx::Null< int >  __o_colorOut,::hx::Null< Float >  __o_gradientCentreX,::hx::Null< Float >  __o_gradientCentreY,::hx::Null< Float >  __o_rotation);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="pixelimage.triangleGML.gradient.EllipseRadialGradient")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"pixelimage.triangleGML.gradient.EllipseRadialGradient"); }
		static ::hx::ObjectPtr< EllipseRadialGradient_obj > __new(::hx::Null< Float >  __o_opacity,::hx::Null< bool >  __o_visibility,::hx::Null< int >  __o_centreX,::hx::Null< int >  __o_centreY,::hx::Null< int >  __o_radiusX,::hx::Null< int >  __o_radiusY,::hx::Null< int >  __o_colorIn,::hx::Null< int >  __o_colorOut,::hx::Null< Float >  __o_gradientCentreX,::hx::Null< Float >  __o_gradientCentreY,::hx::Null< Float >  __o_rotation);
		static ::hx::ObjectPtr< EllipseRadialGradient_obj > __alloc(::hx::Ctx *_hx_ctx,::hx::Null< Float >  __o_opacity,::hx::Null< bool >  __o_visibility,::hx::Null< int >  __o_centreX,::hx::Null< int >  __o_centreY,::hx::Null< int >  __o_radiusX,::hx::Null< int >  __o_radiusY,::hx::Null< int >  __o_colorIn,::hx::Null< int >  __o_colorOut,::hx::Null< Float >  __o_gradientCentreX,::hx::Null< Float >  __o_gradientCentreY,::hx::Null< Float >  __o_rotation);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~EllipseRadialGradient_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("EllipseRadialGradient",4d,b9,33,00); }

		Float centreX;
		Float centreY;
		Float radiusX;
		Float radiusY;
		int colorIn;
		int colorOut;
		Float gradientCentreX;
		Float gradientCentreY;
		Float rotation;
		void setParameter(::String name,::String value);

		::pixelimage::ImageStruct render(::pixelimage::ImageStruct pixelShape);

};

} // end namespace pixelimage
} // end namespace triangleGML
} // end namespace gradient

#endif /* INCLUDED_pixelimage_triangleGML_gradient_EllipseRadialGradient */ 
