// Generated by Haxe 4.3.0-rc.1+
#ifndef INCLUDED_pixelimage_triangleGML_coreShape_GroupShape
#define INCLUDED_pixelimage_triangleGML_coreShape_GroupShape

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_pixelimage_triangleGML_coreShape_ShapeInterface
#include <pixelimage/triangleGML/coreShape/ShapeInterface.h>
#endif
HX_DECLARE_CLASS1(pixelimage,ImageStruct)
HX_DECLARE_CLASS2(pixelimage,algo,IhitObj)
HX_DECLARE_CLASS3(pixelimage,triangleGML,coreShape,GroupShape)
HX_DECLARE_CLASS3(pixelimage,triangleGML,coreShape,ShapeInterface)

namespace pixelimage{
namespace triangleGML{
namespace coreShape{


class HXCPP_CLASS_ATTRIBUTES GroupShape_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef GroupShape_obj OBJ_;
		GroupShape_obj();

	public:
		enum { _hx_ClassId = 0x24e92cfb };

		void __construct(::hx::Null< Float >  __o_opacity,::hx::Null< bool >  __o_visibility);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="pixelimage.triangleGML.coreShape.GroupShape")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"pixelimage.triangleGML.coreShape.GroupShape"); }

		//~GroupShape_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		void *_hx_getInterface(int inHash);
		::String __ToString() const { return HX_("GroupShape",82,7f,99,e9); }

		bool visibility;
		Float opacity;
		Float offX;
		Float offY;
		::Dynamic hitObj;
		virtual void setParameter(::String name,::String value);
		::Dynamic setParameter_dyn();

		void translate(Float x,Float y);
		::Dynamic translate_dyn();

		virtual ::pixelimage::ImageStruct render(::pixelimage::ImageStruct pixelShape);
		::Dynamic render_dyn();

};

} // end namespace pixelimage
} // end namespace triangleGML
} // end namespace coreShape

#endif /* INCLUDED_pixelimage_triangleGML_coreShape_GroupShape */ 
