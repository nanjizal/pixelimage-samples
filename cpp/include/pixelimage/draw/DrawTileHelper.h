// Generated by Haxe 4.3.0-rc.1+
#ifndef INCLUDED_pixelimage_draw_DrawTileHelper
#define INCLUDED_pixelimage_draw_DrawTileHelper

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_justPath_ILinePathContext
#include <justPath/ILinePathContext.h>
#endif
HX_DECLARE_CLASS1(justPath,ILinePathContext)
HX_DECLARE_CLASS1(justPath,SvgLinePath)
HX_DECLARE_CLASS1(pixelimage,ImageStruct)
HX_DECLARE_CLASS2(pixelimage,algo,HitQuad)
HX_DECLARE_CLASS2(pixelimage,algo,IhitObj)
HX_DECLARE_CLASS2(pixelimage,draw,DrawTileHelper)

namespace pixelimage{
namespace draw{


class HXCPP_CLASS_ATTRIBUTES DrawTileHelper_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef DrawTileHelper_obj OBJ_;
		DrawTileHelper_obj();

	public:
		enum { _hx_ClassId = 0x387fab99 };

		void __construct(::pixelimage::ImageStruct pixelImage,Float strokeWidth,::pixelimage::ImageStruct tileImageStroke,::hx::Null< Float >  __o_translateX,::hx::Null< Float >  __o_translateY,::hx::Null< Float >  __o_scaleX,::hx::Null< Float >  __o_scaleY);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="pixelimage.draw.DrawTileHelper")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"pixelimage.draw.DrawTileHelper"); }
		static ::hx::ObjectPtr< DrawTileHelper_obj > __new(::pixelimage::ImageStruct pixelImage,Float strokeWidth,::pixelimage::ImageStruct tileImageStroke,::hx::Null< Float >  __o_translateX,::hx::Null< Float >  __o_translateY,::hx::Null< Float >  __o_scaleX,::hx::Null< Float >  __o_scaleY);
		static ::hx::ObjectPtr< DrawTileHelper_obj > __alloc(::hx::Ctx *_hx_ctx,::pixelimage::ImageStruct pixelImage,Float strokeWidth,::pixelimage::ImageStruct tileImageStroke,::hx::Null< Float >  __o_translateX,::hx::Null< Float >  __o_translateY,::hx::Null< Float >  __o_scaleX,::hx::Null< Float >  __o_scaleY);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~DrawTileHelper_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		void *_hx_getInterface(int inHash);
		::String __ToString() const { return HX_("DrawTileHelper",80,c4,44,f6); }

		::justPath::SvgLinePath svgLinePath;
		Float x0;
		Float y0;
		bool toggleDraw;
		Float strokeWidth;
		::pixelimage::ImageStruct tileImageStroke;
		Float translateX;
		Float translateY;
		Float scaleX;
		Float scaleY;
		::pixelimage::ImageStruct pixelImage;
		::pixelimage::algo::HitQuad info;
		::pixelimage::algo::HitQuad oldInfo;
		void lineSegmentTo(Float x2,Float y2);
		::Dynamic lineSegmentTo_dyn();

		void lineTo(Float x2,Float y2);
		::Dynamic lineTo_dyn();

		void moveTo(Float x1,Float y1);
		::Dynamic moveTo_dyn();

		void curveTo(Float x2,Float y2,Float x3,Float y3,Float x4,Float y4);
		::Dynamic curveTo_dyn();

};

} // end namespace pixelimage
} // end namespace draw

#endif /* INCLUDED_pixelimage_draw_DrawTileHelper */ 
